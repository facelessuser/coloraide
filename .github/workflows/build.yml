name: build

on:
  push:
    branches:
      - 'main'
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  tests:
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        platform: [ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox coverage
    - name: Test
      run: |
        python -m tox -e py
    - name: Upload Results
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: ${{ matrix.platform }}-${{ matrix.python-version }}
        fail_ci_if_error: false

  lint:
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.11']

    env:
      TOXENV: lint

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox
    - name: Lint
      run: |
        python -m tox

  documents:
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.11']

    env:
      TOXENV: documents

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements/dev.txt
        npm install --legacy-peer-deps
    - name: Install Aspell
      run: |
        sudo apt-get install aspell aspell-en
    - name: Build documents
      run: |
        python tools/buildwheel.py
        npm run build
        python -m tox
