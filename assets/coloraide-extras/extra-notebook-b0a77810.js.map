{"version":3,"file":"extra-notebook-b0a77810.js","sources":["../../../src/js/extra-notebook.js"],"sourcesContent":["(() => {\n  let pyodide = null\n  let busy = false\n  let raw = \"\"\n  let gist = \"\"\n  const reIdNum = /.*?_(\\d+)$/\n  let initialized = false\n  // This is the Python payload that will be executed when the user\n  // presses the `Run` button. It will execute the code, create a\n  // Python console output, find color references, steps, and interpolation\n  // references and render the appropriate preview.\n  const pycode = \"{{pycode}}\"\n  const defContent = `import coloraide\ncoloraide.__version__\nColor('red')`\n\n  const getContent = content => {\n    return `\n!!! new \"This notebook is powered by [Pyodide](https://github.com/pyodide/pyodide). \\\nLearn more [here](\\\n?notebook=https://gist.githubusercontent.com/facelessuser/7c819668b5eb248ecb9ac608d91391cf/raw/playground.md\\\n). Preview, convert, interpolate, and explore!\"\n\n\\`\\`\\`\\`\\`\\`\\`\\`playground\n${content}\n\\`\\`\\`\\`\\`\\`\\`\\`\n`\n  }\n\n  const textResize = inpt => {\n    // Resize inputs based on text height.\n\n    inpt.style.height = \"5px\"\n    inpt.style.height = `${inpt.scrollHeight}px`\n  }\n\n  const encodeuri = uri => {\n    // Encode the URI component.\n\n    return encodeURIComponent(uri).replace(/[.!'()*]/g, c => {\n      return `%${c.charCodeAt(0).toString(16)}`\n    })\n  }\n\n  const pyexecute = async currentID => {\n    // Execute Python code\n\n    const currentInputs = document.getElementById(`__playground-inputs_${currentID}`)\n    currentInputs.setAttribute(\"readonly\", \"\")\n    pyodide.globals.set(\"id_num\", currentID)\n    pyodide.globals.set(\"action\", \"notebook\")\n    await pyodide.runPythonAsync(pycode)\n    currentInputs.removeAttribute(\"readonly\")\n  }\n\n  const pyrender = async text => {\n    // Execute Python code\n\n    pyodide.globals.set(\"content\", text)\n    pyodide.globals.set(\"action\", \"render\")\n    await pyodide.runPythonAsync(pycode)\n    const src = document.getElementById(\"__notebook-input\")\n    if (src) {\n      raw = text\n      src.value = text\n    }\n    if (window.location.hash) {\n      window.location.href = window.location.href // eslint-disable-line no-self-assign\n    }\n  }\n\n  const setupPyodide = async() => {\n    // Load `Pyodide` and the any default packages we can need and can load.\n\n    if (!initialized) {\n      initialized = true\n      pyodide = await loadPyodide({ // eslint-disable-line no-undef\n        indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\",\n        fullStdLib: false\n      })\n      await pyodide.loadPackage([\"micropip\", \"Pygments\"])\n    }\n  }\n\n  const showBusy = (target, label, relative) => {\n    const loaderLabel = (typeof label === \"undefined\" || label === null) ? \"Loading...\" : label\n    const classes = relative ? \"loading relative\" : \"loading\"\n    const template = document.createElement(\"template\")\n    template.innerHTML = `<div class=\"${classes}\"><div class=\"loader\"></div><div>${loaderLabel}</div></div>`\n    target.appendChild(template.content.firstChild)\n  }\n\n  const hideBusy = target => {\n    const loading = target.querySelector(\".loading\")\n    if (loading) {\n      target.removeChild(target.querySelector(\".loading\"))\n    }\n  }\n\n  const init = async first => {\n    // Setup input highlighting and events to run Python code blocks.\n\n    const notebook = document.getElementById(\"__notebook-source\")\n    const playgrounds = document.querySelectorAll(\".playground\")\n    playgrounds.forEach(pg => {\n\n      const currentID = pg.id.replace(reIdNum, \"$1\")\n      const inputs = document.getElementById(`__playground-inputs_${currentID}`)\n      const results = document.getElementById(`__playground-results_${currentID}`)\n      const pgcode = document.getElementById(`__playground-code_${currentID}`)\n      const buttonEdit = document.querySelector(`button#__playground-edit_${currentID}`)\n      const buttonShare = document.querySelector(`button#__playground-share_${currentID}`)\n      const buttonRun = document.querySelector(`button#__playground-run_${currentID}`)\n      const buttonCancel = document.querySelector(`button#__playground-cancel_${currentID}`)\n\n      inputs.addEventListener(\"input\", () => {\n        // Adjust textarea height on text input.\n\n        textResize(inputs)\n      })\n\n      if (notebook && first) {\n        document.getElementById(\"__notebook-input\").addEventListener(\"input\", e => {\n          // Adjust textarea height on text input.\n\n          textResize(e.target)\n        })\n\n        const editPage = document.getElementById(\"__notebook-edit\")\n        editPage.addEventListener(\"click\", () => {\n          document.getElementById(\"__notebook-render\").classList.toggle(\"hidden\")\n          document.getElementById(\"__notebook-source\").classList.toggle(\"hidden\")\n          textResize(document.getElementById(\"__notebook-input\"))\n        })\n\n        document.getElementById(\"__notebook-md-gist\").addEventListener(\"click\", async() => {\n          let uri = prompt(\"Please enter link to the Markdown page source:\", gist) // eslint-disable-line no-alert\n          if (uri !== null) {\n            uri = encodeuri(uri)\n            const relativePathQuery = `${window.location.pathname}?${new URLSearchParams(`notebook=${uri}`).toString()}`\n            history.pushState(null, \"\", relativePathQuery)\n            main(false) // eslint-disable-line no-use-before-define\n          }\n        })\n\n        document.getElementById(\"__notebook-py-gist\").addEventListener(\"click\", async() => {\n          let uri = prompt(\"Please enter the link to the Python code source:\", gist) // eslint-disable-line no-alert\n          if (uri !== null) {\n            uri = encodeuri(uri)\n            const relativePathQuery = `${window.location.pathname}?${new URLSearchParams(`source=${uri}`).toString()}`\n            history.pushState(null, \"\", relativePathQuery)\n            main(false) // eslint-disable-line no-use-before-define\n          }\n        })\n\n        document.getElementById(\"__notebook-input\").value = raw\n        document.getElementById(\"__notebook-cancel\").addEventListener(\"click\", () => {\n          document.getElementById(\"__notebook-render\").classList.toggle(\"hidden\")\n          document.getElementById(\"__notebook-source\").classList.toggle(\"hidden\")\n        })\n\n        document.getElementById(\"__notebook-submit\").addEventListener(\"click\", async() => {\n          const render = document.getElementById(\"__notebook-render\")\n          raw = document.getElementById(\"__notebook-input\").value\n          render.classList.toggle(\"hidden\")\n          document.getElementById(\"__notebook-source\").classList.toggle(\"hidden\")\n          const article = document.querySelector(\"article\")\n          showBusy(article, \"Loading Notebook...\")\n          render.innerHTML = \"\"\n          await setupPyodide()\n          await pyrender(raw)\n          await init()\n          hideBusy(article)\n        })\n      }\n\n      inputs.addEventListener(\"touchmove\", e => {\n        // Stop propagation on \"touchmove\".\n\n        e.stopPropagation()\n      })\n\n      buttonEdit.addEventListener(\"click\", async() => {\n        // Handle the button click: show source or execute source.\n\n        pgcode.classList.toggle(\"hidden\")\n        results.classList.toggle(\"hidden\")\n        buttonRun.classList.toggle(\"hidden\")\n        buttonCancel.classList.toggle(\"hidden\")\n        buttonEdit.classList.toggle(\"hidden\")\n        buttonShare.classList.toggle(\"hidden\")\n        textResize(inputs)\n        inputs.focus()\n      })\n\n      buttonShare.addEventListener(\"click\", async() => {\n        // Handle the share click: copy URL with code as parameter.\n\n        const uri = encodeuri(inputs.value)\n        const loc = window.location\n        let pathname = \"/playground/\"\n        if (loc.pathname.startsWith(\"/coloraide/\")) {\n          pathname = \"/coloraide/playground/\"\n        }\n        const path = `${loc.protocol}//${loc.host}${pathname}?code=${uri}`\n        if (uri.length > 1000) {\n          alert(\"Code must be under a 1000 characters to generate a URL!\") // eslint-disable-line no-alert\n        } else {\n          navigator.clipboard.writeText(path).then(async() => {\n            alert(\"Link copied to clipboard :)\") // eslint-disable-line no-alert\n          }, async() => {\n            alert(\"Failed to copy link clipboard!\") // eslint-disable-line no-alert\n          })\n        }\n      })\n\n      buttonRun.addEventListener(\"click\", async() => {\n        // Handle the button click: show source or execute source.\n\n        if (busy) {\n          return\n        }\n\n        busy = true\n        // Load Pyodide and related packages.\n        const form = pgcode.querySelector(\"form\")\n        showBusy(form, null, true)\n        const buttons = document.querySelectorAll(\".playground .playground-run\")\n        if (buttons) {\n          buttons.forEach(b => {\n            b.setAttribute(\"disabled\", \"\")\n          })\n        }\n        await setupPyodide()\n        results.querySelector(\"code\").innerHTML = \"\"\n        await pyexecute(currentID)\n        if (buttons) {\n          buttons.forEach(b => {\n            b.removeAttribute(\"disabled\")\n          })\n        }\n        hideBusy(form)\n        pgcode.classList.toggle(\"hidden\")\n        results.classList.toggle(\"hidden\")\n        buttonEdit.classList.toggle(\"hidden\")\n        buttonShare.classList.toggle(\"hidden\")\n        buttonRun.classList.toggle(\"hidden\")\n        buttonCancel.classList.toggle(\"hidden\")\n        busy = false\n      })\n\n      buttonCancel.addEventListener(\"click\", () => {\n        // Cancel edit.\n\n        pgcode.classList.toggle(\"hidden\")\n        results.classList.toggle(\"hidden\")\n        buttonEdit.classList.toggle(\"hidden\")\n        buttonShare.classList.toggle(\"hidden\")\n        buttonRun.classList.toggle(\"hidden\")\n        buttonCancel.classList.toggle(\"hidden\")\n      })\n    })\n  }\n\n  const main = async first => {\n    // Load external source to render in a playground.\n    // This can be something like a file on a gist we must read in (?source=)\n    // or raw code (?code=).\n\n    if (window.location.pathname.endsWith(\"/playground/\")) {\n      const params = new URLSearchParams(window.location.search)\n      const loadMsg = \"Loading Pyodide...\"\n      const pageMsg = \"Loading Notebook...\"\n      const uri = params.has(\"source\") ? params.get(\"source\") : params.get(\"notebook\")\n      const article = document.querySelector(\"article\")\n      if (uri !== null && uri.trim()) {\n        // A source was specified, so load it.\n        showBusy(article, loadMsg)\n        await setupPyodide()\n        hideBusy(article)\n        showBusy(article, pageMsg)\n        try {\n          const gistType = params.has(\"source\") ? \"source\" : \"notebook\"\n          let value = \"\"\n          const xhr = new XMLHttpRequest()\n          gist = uri\n          xhr.open(\"GET\", uri, true)\n          xhr.onload = async() => {\n            // Try and load the requested content\n            if (xhr.readyState === 4) {\n              if (xhr.status === 200) {\n                value = xhr.responseText\n              }\n            }\n\n            if (gistType === \"source\") {\n              value = getContent(value)\n            }\n            await pyrender(value)\n            await init(first)\n            hideBusy(article)\n          }\n          xhr.send()\n        } catch (err) {} // eslint-disable-line no-empty\n      } else {\n        gist = \"\"\n        const content = getContent(params.has(\"code\") ? params.get(\"code\") : defContent)\n        showBusy(article, loadMsg)\n        await setupPyodide()\n        hideBusy(article)\n        showBusy(article, pageMsg)\n        await pyrender(content)\n        await init(first)\n        hideBusy(article)\n      }\n    } else {\n      gist = \"\"\n      init(first)\n    }\n  }\n\n  // Run main\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    main(true)\n  })\n})()\n"],"names":["pyodide","busy","raw","gist","reIdNum","initialized","pycode","getContent","textResize","encodeuri","pyexecute","pyrender","setupPyodide","showBusy","hideBusy","init","main","content","inpt","style","height","scrollHeight","uri","encodeURIComponent","replace","c","charCodeAt","toString","currentID","currentInputs","document","getElementById","setAttribute","globals","set","runPythonAsync","removeAttribute","text","src","value","window","location","hash","href","loadPyodide","indexURL","fullStdLib","loadPackage","target","label","relative","loaderLabel","classes","template","createElement","innerHTML","appendChild","firstChild","querySelector","removeChild","first","notebook","querySelectorAll","forEach","pg","id","inputs","results","pgcode","buttonEdit","buttonShare","buttonRun","buttonCancel","addEventListener","e","classList","toggle","prompt","relativePathQuery","pathname","URLSearchParams","history","pushState","render","article","stopPropagation","focus","loc","startsWith","path","protocol","host","length","alert","navigator","clipboard","writeText","then","form","buttons","b","endsWith","params","search","loadMsg","pageMsg","has","get","trim","gistType","xhr","XMLHttpRequest","open","onload","readyState","status","responseText","send","err"],"mappings":"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"}