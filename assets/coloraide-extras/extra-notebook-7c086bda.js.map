{"version":3,"file":"extra-notebook-7c086bda.js","sources":["../../../src/js/extra-notebook.js"],"sourcesContent":["(() => {\n  let pyodide = null\n  let busy = false\n  let raw = \"\"\n  let gist = \"\"\n  let editTemp = {}\n  const reIdNum = /.*?_(\\d+)$/\n  let initialized = false\n  let lastSearch = \"\"\n  let fake = false\n  const tabStart = /^( {1,4}|\\t)/\n  // This is the Python payload that will be executed when the user\n  // presses the `Run` button. It will execute the code, create a\n  // Python console output, find color references, steps, and interpolation\n  // references and render the appropriate preview.\n  const pycode = \"{{pycode}}\"\n  const defContent = \"import coloraide\\ncoloraide.__version__\\nColor('red')\"\n\n  const getContent = content => {\n    return `\n!!! new \"This notebook is powered by [Pyodide](https://github.com/pyodide/pyodide). \\\nLearn more [here](\\\n?notebook=https://gist.githubusercontent.com/facelessuser/7c819668b5eb248ecb9ac608d91391cf/raw/playground.md\\\n). Preview, convert, interpolate, and explore!\"\n\n\\`\\`\\`\\`\\`\\`\\`\\`playground\n${content}\n\\`\\`\\`\\`\\`\\`\\`\\`\n`\n  }\n\n  const fakeDOMContentLoaded = () => {\n    // Send a fake `DOMContentLoaded`\n    fake = true\n    window.document.dispatchEvent(new Event(\"DOMContentLoaded\", {\n      bubbles: true,\n      cancelable: true\n    }))\n  }\n\n  const textResize = inpt => {\n    // Resize inputs based on text height.\n\n    inpt.style.height = \"5px\"\n    inpt.style.height = `${inpt.scrollHeight}px`\n  }\n\n  const encodeuri = uri => {\n    // Encode the URI component.\n\n    return encodeURIComponent(uri).replace(/[.!'()*]/g, c => {\n      return `%${c.charCodeAt(0).toString(16)}`\n    })\n  }\n\n  const pyexecute = async currentID => {\n    // Execute Python code\n\n    const currentInputs = document.getElementById(`__playground-inputs_${currentID}`)\n    currentInputs.setAttribute(\"readonly\", \"\")\n    pyodide.globals.set(\"id_num\", currentID)\n    pyodide.globals.set(\"action\", \"notebook\")\n    await pyodide.runPythonAsync(pycode)\n    currentInputs.removeAttribute(\"readonly\")\n  }\n\n  const pyrender = async text => {\n    // Execute Python code\n\n    pyodide.globals.set(\"content\", text)\n    pyodide.globals.set(\"action\", \"render\")\n    await pyodide.runPythonAsync(pycode)\n    const src = document.getElementById(\"__notebook-input\")\n    if (src) {\n      raw = text\n      src.value = text\n    }\n    if (window.location.hash) {\n      // Force jumping to hashes\n      window.location.href = window.location.href // eslint-disable-line no-self-assign\n    }\n  }\n\n  const setupPyodide = async() => {\n    // Load `Pyodide` and the any default packages we can need and can load.\n\n    if (!initialized) {\n      initialized = true\n      pyodide = await loadPyodide({ // eslint-disable-line no-undef\n        indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\",\n        fullStdLib: false\n      })\n      await pyodide.loadPackage([\"micropip\", \"Pygments\"])\n    }\n  }\n\n  const showBusy = (target, label, relative) => {\n    // Show busy indicator\n\n    const loaderLabel = (typeof label === \"undefined\" || label === null) ? \"Loading...\" : label\n    const classes = relative ? \"loading relative\" : \"loading\"\n    const template = document.createElement(\"template\")\n    template.innerHTML = `<div class=\"${classes}\"><div class=\"loader\"></div><div>${loaderLabel}</div></div>`\n    target.appendChild(template.content.firstChild)\n  }\n\n  const hideBusy = target => {\n    // Hide busy indicator\n\n    const loading = target.querySelector(\".loading\")\n    if (loading) {\n      target.removeChild(target.querySelector(\".loading\"))\n    }\n  }\n\n  const popState = () => {\n    // Handle notebook history\n\n    if (\n      window.location.pathname === \"/coloraide/playground/\"\n    ) {\n      const current = decodeURIComponent(new URLSearchParams(window.location.search).toString())\n      if (current !== lastSearch) {\n        main(false) // eslint-disable-line no-use-before-define\n      }\n    }\n  }\n\n  const interceptClickEvent = e => {\n    // Catch links to other notebook pages and handle them\n\n    const target = e.target || e.srcElement\n    if (target.tagName === \"A\" && main) { // eslint-disable-line no-use-before-define\n      if (\n        target.getAttribute(\"href\") &&\n        target.host === window.location.host &&\n        window.location.pathname === \"/coloraide/playground/\" &&\n        window.location.pathname === target.pathname &&\n        window.location.search !== target.search\n      ) {\n        e.preventDefault()\n        const search = new URLSearchParams(target.search)\n        const state = {}\n        for (const [key, value] of search) {\n          state[key] = value\n        }\n        history.pushState(state, \"\", target.href)\n        main(false) // eslint-disable-line no-use-before-define\n      }\n    }\n  }\n\n  const handleTab = e => {\n    // Prevent tab from tabbing out.\n\n    if (e.key === 'Tab') {\n      const target = e.target\n\n      if (target.selectionStart !== target.selectionEnd) {\n        e.preventDefault()\n\n        let start = target.selectionStart\n        let end = target.selectionEnd\n\n        const text = target.value\n\n        while (start > 0 && text[start - 1] !== '\\n') {\n          start--\n        }\n        while (end > 0 && text[end - 1] !== '\\n' && end < text.length) {\n          end++\n        }\n\n        let lines = text.substr(start, end - start).split('\\n')\n\n        for (let i = 0; i < lines.length; i++) {\n\n          // Don't indent last line if cursor at start of line\n          if (i === lines.length - 1 && lines[i].length === 0) {\n            continue\n          }\n\n          // Indent or deindent\n          if (e.shiftKey) {\n            lines[i] = lines[i].replace(tabStart, '')\n          } else {\n            lines[i] = `    ${lines[i]}`\n          }\n        }\n        lines = lines.join('\\n')\n\n        // Update the text area\n        target.value = text.substr(0, start) + lines + text.substr(end)\n        target.selectionStart = start\n        target.selectionEnd = start + lines.length\n      }\n    }\n  }\n\n  const init = async first => {\n    // Setup input highlighting and events to run Python code blocks.\n\n    const notebook = document.getElementById(\"__notebook-source\")\n    const playgrounds = document.querySelectorAll(\".playground\")\n    playgrounds.forEach(pg => {\n\n      const currentID = pg.id.replace(reIdNum, \"$1\")\n      const inputs = document.getElementById(`__playground-inputs_${currentID}`)\n      const results = document.getElementById(`__playground-results_${currentID}`)\n      const pgcode = document.getElementById(`__playground-code_${currentID}`)\n      const buttonEdit = document.querySelector(`button#__playground-edit_${currentID}`)\n      const buttonShare = document.querySelector(`button#__playground-share_${currentID}`)\n      const buttonRun = document.querySelector(`button#__playground-run_${currentID}`)\n      const buttonCancel = document.querySelector(`button#__playground-cancel_${currentID}`)\n\n      inputs.addEventListener(\"input\", () => {\n        // Adjust textarea height on text input.\n\n        textResize(inputs)\n      })\n\n      inputs.addEventListener('keydown', handleTab)\n\n      if (notebook && first) {\n        const notebookInput = document.getElementById(\"__notebook-input\")\n\n        notebookInput.addEventListener(\"input\", e => {\n          // Adjust textarea height on text input.\n\n          textResize(e.target)\n        })\n\n        notebookInput.addEventListener('keydown', handleTab)\n\n        const editPage = document.getElementById(\"__notebook-edit\")\n        editPage.addEventListener(\"click\", () => {\n          editTemp[notebookInput.id] = notebookInput.value\n          document.getElementById(\"__notebook-render\").classList.toggle(\"hidden\")\n          document.getElementById(\"__notebook-source\").classList.toggle(\"hidden\")\n          textResize(document.getElementById(\"__notebook-input\"))\n        })\n\n        document.getElementById(\"__notebook-md-gist\").addEventListener(\"click\", async e => {\n          let uri = prompt(\"Please enter link to the Markdown page source:\", gist) // eslint-disable-line no-alert\n          if (uri !== null) {\n            uri = encodeuri(uri)\n            e.preventDefault()\n            history.pushState({notebook: uri}, \"\", `?${new URLSearchParams(`notebook=${uri}`).toString()}`)\n            main(false) // eslint-disable-line no-use-before-define\n          }\n        })\n\n        document.getElementById(\"__notebook-py-gist\").addEventListener(\"click\", async e => {\n          let uri = prompt(\"Please enter the link to the Python code source:\", gist) // eslint-disable-line no-alert\n          if (uri !== null) {\n            uri = encodeuri(uri)\n            e.preventDefault()\n            history.pushState({source: uri}, \"\", `?${new URLSearchParams(`source=${uri}`).toString()}`)\n            main(false) // eslint-disable-line no-use-before-define\n          }\n        })\n\n        document.getElementById(\"__notebook-input\").value = raw\n        document.getElementById(\"__notebook-cancel\").addEventListener(\"click\", () => {\n          notebookInput.value = editTemp[notebookInput.id]\n          delete editTemp[notebookInput.id]\n          document.getElementById(\"__notebook-render\").classList.toggle(\"hidden\")\n          document.getElementById(\"__notebook-source\").classList.toggle(\"hidden\")\n        })\n\n        document.getElementById(\"__notebook-submit\").addEventListener(\"click\", async() => {\n          const render = document.getElementById(\"__notebook-render\")\n          raw = document.getElementById(\"__notebook-input\").value\n          render.classList.toggle(\"hidden\")\n          document.getElementById(\"__notebook-source\").classList.toggle(\"hidden\")\n          const article = document.querySelector(\"article\")\n          showBusy(article, \"Loading Notebook...\")\n          render.innerHTML = \"\"\n          editTemp = {}\n          await setupPyodide()\n          await pyrender(raw)\n          await init()\n          hideBusy(article)\n        })\n      }\n\n      inputs.addEventListener(\"touchmove\", e => {\n        // Stop propagation on \"touchmove\".\n\n        e.stopPropagation()\n      })\n\n      buttonEdit.addEventListener(\"click\", async() => {\n        // Handle the button click: show source or execute source.\n\n        editTemp[currentID] = inputs.value\n        pgcode.classList.toggle(\"hidden\")\n        results.classList.toggle(\"hidden\")\n        buttonRun.classList.toggle(\"hidden\")\n        buttonCancel.classList.toggle(\"hidden\")\n        buttonEdit.classList.toggle(\"hidden\")\n        buttonShare.classList.toggle(\"hidden\")\n        textResize(inputs)\n        inputs.focus()\n      })\n\n      buttonShare.addEventListener(\"click\", async() => {\n        // Handle the share click: copy URL with code as parameter.\n\n        const uri = encodeuri(inputs.value)\n        const loc = window.location\n        let pathname = \"/playground/\"\n        if (loc.pathname.startsWith(\"/coloraide/\")) {\n          pathname = \"/coloraide/playground/\"\n        }\n        const path = `${loc.protocol}//${loc.host}${pathname}?code=${uri}`\n        if (uri.length > 1000) {\n          alert(\"Code must be under a 1000 characters to generate a URL!\") // eslint-disable-line no-alert\n        } else {\n          navigator.clipboard.writeText(path).then(async() => {\n            alert(\"Link copied to clipboard :)\") // eslint-disable-line no-alert\n          }, async() => {\n            alert(\"Failed to copy link clipboard!\") // eslint-disable-line no-alert\n          })\n        }\n      })\n\n      buttonRun.addEventListener(\"click\", async() => {\n        // Handle the button click: show source or execute source.\n\n        if (busy) {\n          return\n        }\n\n        busy = true\n        // Load Pyodide and related packages.\n        const form = pgcode.querySelector(\"form\")\n        showBusy(form, null, true)\n        const buttons = document.querySelectorAll(\".playground .playground-run\")\n        if (buttons) {\n          buttons.forEach(b => {\n            b.setAttribute(\"disabled\", \"\")\n          })\n        }\n        await setupPyodide()\n        results.querySelector(\"code\").innerHTML = \"\"\n        await pyexecute(currentID)\n        if (buttons) {\n          buttons.forEach(b => {\n            b.removeAttribute(\"disabled\")\n          })\n        }\n        hideBusy(form)\n        pgcode.classList.toggle(\"hidden\")\n        results.classList.toggle(\"hidden\")\n        buttonEdit.classList.toggle(\"hidden\")\n        buttonShare.classList.toggle(\"hidden\")\n        buttonRun.classList.toggle(\"hidden\")\n        buttonCancel.classList.toggle(\"hidden\")\n\n        delete editTemp[currentID]\n        busy = false\n      })\n\n      buttonCancel.addEventListener(\"click\", () => {\n        // Cancel edit.\n\n        inputs.value = editTemp[currentID]\n        delete editTemp[currentID]\n        pgcode.classList.toggle(\"hidden\")\n        results.classList.toggle(\"hidden\")\n        buttonEdit.classList.toggle(\"hidden\")\n        buttonShare.classList.toggle(\"hidden\")\n        buttonRun.classList.toggle(\"hidden\")\n        buttonCancel.classList.toggle(\"hidden\")\n      })\n    })\n  }\n\n  const main = async first => {\n    // Load external source to render in a playground.\n    // This can be something like a file on a gist we must read in (?source=)\n    // or raw code (?code=).\n\n    editTemp = {}\n\n    if (window.location.pathname.endsWith(\"/playground/\")) {\n      const params = new URLSearchParams(window.location.search)\n      const loadMsg = \"Loading Pyodide...\"\n      const pageMsg = \"Loading Notebook...\"\n      const uri = params.has(\"source\") ? params.get(\"source\") : params.get(\"notebook\")\n      const article = document.querySelector(\"article\")\n      if (uri !== null && uri.trim()) {\n        // A source was specified, so load it.\n        showBusy(article, loadMsg)\n        await setupPyodide()\n        hideBusy(article)\n        showBusy(article, pageMsg)\n        try {\n          const gistType = params.has(\"source\") ? \"source\" : \"notebook\"\n          lastSearch = decodeURIComponent(params.toString())\n          let value = \"\"\n          const xhr = new XMLHttpRequest()\n          gist = uri\n          xhr.open(\"GET\", uri, true)\n          xhr.onload = async() => {\n            // Try and load the requested content\n            if (xhr.readyState === 4) {\n              if (xhr.status === 200) {\n                value = xhr.responseText\n              }\n            }\n\n            if (gistType === \"source\") {\n              value = getContent(value)\n            }\n            await pyrender(value)\n            await init(first)\n            hideBusy(article)\n            fakeDOMContentLoaded()\n          }\n          xhr.send()\n        } catch (err) {} // eslint-disable-line no-empty\n      } else {\n        gist = \"\"\n        const content = getContent(params.has(\"code\") ? params.get(\"code\") : defContent)\n        lastSearch = decodeURIComponent(params.toString())\n        showBusy(article, loadMsg)\n        await setupPyodide()\n        hideBusy(article)\n        showBusy(article, pageMsg)\n        await pyrender(content)\n        await init(first)\n        hideBusy(article)\n        fakeDOMContentLoaded()\n      }\n    } else {\n      gist = \"\"\n      lastSearch = \"\"\n      init(first)\n    }\n  }\n\n  // Capture links in notebook pages so that we can make playgound links load instantly\n  document.addEventListener(\"click\", interceptClickEvent)\n\n  // Handle history of notebook pages as they are loaded dynamically\n  window.addEventListener(\"popstate\", popState)\n\n  // Before leaving, turn off fake, just in case we navigated away before finished\n  window.addEventListener(\"unload\", () => {\n    fake = true\n  })\n\n  // Attach main via subscribe (subscribes to Materials on page load and instant page loads)\n  window.document$.subscribe(() => {\n    // To get other libraries to to reload, we may create a fake `DOMContentLoaded`\n    // No need to process these events.\n    if (fake) {\n      fake = false\n      return\n    }\n    main(true)\n  })\n})()\n"],"names":["pyodide","busy","raw","gist","editTemp","reIdNum","initialized","lastSearch","fake","tabStart","pycode","getContent","fakeDOMContentLoaded","textResize","encodeuri","pyexecute","pyrender","setupPyodide","showBusy","hideBusy","handleTab","init","main","content","window","document","dispatchEvent","Event","bubbles","cancelable","inpt","style","height","scrollHeight","uri","encodeURIComponent","replace","c","charCodeAt","toString","currentID","currentInputs","getElementById","setAttribute","globals","set","runPythonAsync","removeAttribute","text","src","value","location","hash","href","loadPyodide","indexURL","fullStdLib","loadPackage","target","label","relative","loaderLabel","classes","template","createElement","innerHTML","appendChild","firstChild","querySelector","removeChild","e","key","selectionStart","selectionEnd","preventDefault","start","end","length","lines","substr","split","i","shiftKey","join","first","notebook","querySelectorAll","forEach","pg","id","inputs","results","pgcode","buttonEdit","buttonShare","buttonRun","buttonCancel","addEventListener","notebookInput","classList","toggle","prompt","history","pushState","URLSearchParams","source","render","article","stopPropagation","focus","loc","pathname","startsWith","path","protocol","host","alert","navigator","clipboard","writeText","then","form","buttons","b","endsWith","params","search","loadMsg","pageMsg","has","get","trim","gistType","decodeURIComponent","xhr","XMLHttpRequest","open","onload","readyState","status","responseText","send","err","srcElement","tagName","getAttribute","state","document$","subscribe"],"mappings":"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"}